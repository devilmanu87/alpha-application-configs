controller:
  #ingressClassResource:
    # -- Name of the ingressClass
  #  name: obs-nginx-ingress
  replicaCount: 1
  extraArgs:
    default-ssl-certificate: "obs-logging/nginx-ingress-secret-csi"
  image:
    repository: agrid06p1hubacr001.azurecr.io/obs-logging/k8s.gcr.io/ingress-nginx/controller
    tag: v1.1.1
    digest: sha256:402333bae4fa45ff918939e77e6c836e0c39f53cafba734a91503fd38190c032
  service:
    loadBalancerIP: 10.16.134.157 #specfiy if we need statis IP
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true" #secific only this, if we are ok with dynamic IP using DHCP
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "agrid-07-p1-hub-util-lb-snet-001"
  admissionWebhooks:
    patch:
      image:
        repository: agrid06p1hubacr001.azurecr.io/obs-logging/k8s.gcr.io/ingress-nginx/kube-webhook-certgen
        tag: v1.1.1
        digest: sha256:78351fc9d9b5f835e0809921c029208faeb7fbb6dc2d3b0d1db0a6584195cfed
  metrics:
    enabled: true  
    serviceMonitor:
      enabled: true
  extraVolumes:
    - name: nginx-ingress-csi-store
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "obs-tls"
        nodePublishSecretRef:
          name: agrid-cpe-p1-akv-ro-obs-spn-01-secrets
  extraVolumeMounts:
    - name: nginx-ingress-csi-store
      mountPath: "/mnt/secrets-store"
      readOnly: true
  tolerations:
    - key: "sku"
      operator: "Equal"
      value: "general"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: app
            operator: In
            values:
            - general
        weight: 100      
defaultBackend:
  enabled: true
  image:
    repository: agrid06p1hubacr001.azurecr.io/obs-logging/k8s.gcr.io/defaultbackend-amd64
    tag: 1.5
    digest: sha256:4dc5e07c8ca4e23bddb3153737d7b8c556e5fb2f29c4558b7cd6e6df99c512c7
